list_to_pay <- Map(f = function(c_tt, name_lan){
df <- dplyr::select(c_tt, to_pay_before_tax, to_pay_after_tax)
df <- data.frame(t(colSums(df)))
df$lan <- name_lan
df$type <- "total"
df
}, c_tt = list_tt_year, name_lan = names(list_tt_year))
list_to_pay_NV <- Map(f = function(c_tt, name_lan){
df <- dplyr::select(c_tt, to_pay_before_tax, to_pay_after_tax)
df <- data.frame(t(colSums(df)))
df$lan <- name_lan
df$type <- "nuvaerdi"
df
}, c_tt = list_tt_year_NV, name_lan = names(list_tt_year))
data_to_pay <- rbind(do.call("rbind", list_to_pay), do.call("rbind", list_to_pay_NV))
plot_data <- pivot_longer(data_to_pay, cols = 1:2, names_to = "tax_type")
plot_data$type <- factor(plot_data$type, levels = c("total", "nuvaerdi"))
plot_data$tax_type <- factor(plot_data$tax_type, levels = c("to_pay_before_tax", "to_pay_after_tax"))
# - add the provenue as horisontal line -
provenues <- sapply(list_tt_year, function(df){df$afdrag[1] + df$depth_remaining[1]})
df <- list_tt_year[[1]]
View(df)
provenues
hovedstol_df
# - add the provenue as horisontal line -
# provenues <- sapply(list_tt_year, function(df){df$afdrag[1] + df$depth_remaining[1]})
# mean_provenue <- mean(provenues)
# - new: add provenue, as this varies -
df <- do.call("rbind", list_lan)
df <- dplyr::filter(df, item == "provenue")
plot_data$provenue <- df$value[match(plot_data$lan, df$name_lan)]
Tr <- ggplot(plot_data, aes(x = lan, y = value, fill = lan))
Tr <- Tr +
geom_col() +
#geom_hline(yintercept = mean_provenue, lty = 4, col = "darkred", size = 0.25) +
geom_point(aes(y = provenue), col = "darkred", size = 2) +
facet_grid(type ~ tax_type) +
scale_fill_manual("", values = lan_colors) +
theme_cowplot(14) +
background_grid(size.major = 0.2) +
xlab("") +
ylab("amount [DKK]") +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
Tr
# - add the provenue as horisontal line -
# provenues <- sapply(list_tt_year, function(df){df$afdrag[1] + df$depth_remaining[1]})
# mean_provenue <- mean(provenues)
# - new: add provenue, as this varies -
df <- do.call("rbind", list_lan)
View(plot_data)
# --
# NEW also add hovedstol
plot_data$hovedstol <- hovedstol_df$value[match(plot_data$lan, hovedstol_df$lan)]
Tr <- ggplot(plot_data, aes(x = lan, y = value, fill = lan))
Tr <- Tr +
geom_col() +
#geom_hline(yintercept = mean_provenue, lty = 4, col = "darkred", size = 0.25) +
geom_point(aes(y = provenue), col = "darkred", size = 2) +
geom_point(aes(y = hovedstol), col = "darkblue", size = 2) +
facet_grid(type ~ tax_type) +
scale_fill_manual("", values = lan_colors) +
theme_cowplot(14) +
background_grid(size.major = 0.2) +
xlab("") +
ylab("amount [DKK]") +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
Tr
Tr <- ggplot(plot_data, aes(x = lan, y = value, fill = lan))
Tr <- Tr +
geom_col() +
#geom_hline(yintercept = mean_provenue, lty = 4, col = "darkred", size = 0.25) +
geom_point(aes(y = provenue), col = "darkred", size = 2) +
geom_point(aes(y = hovedstol), col = "lightblue", size = 2) +
facet_grid(type ~ tax_type) +
scale_fill_manual("", values = lan_colors) +
theme_cowplot(14) +
background_grid(size.major = 0.2) +
xlab("") +
ylab("amount [DKK]") +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
# - also as table please -
sum_table <- pivot_wider(plot_data, names_from = type) %>% select(tax_type, lan, total, nuvaerdi, provenue) %>% arrange(tax_type, nuvaerdi, total)
sum_table <- mutate(sum_table, total_to_provenue = total - provenue,
nuvaerdi_to_provenue = nuvaerdi - provenue,
gebyr_PC_total = round(100*total_to_provenue/provenue, 1),
gebyr_PC_nuvaerdi = round(100*nuvaerdi_to_provenue/provenue, 1))
Tr
knitr::kable(sum_table)
View(sum_table)
list_plot_data <- Map(f = function(c_tt, name_lan){
df <- dplyr::select(c_tt, year, depth_remaining, to_pay = to_pay_before_tax, to_pay_after_tax)
df$lan <- name_lan
df
}, c_tt = list_tt_year_NV, name_lan = names(list_tt_year))
plot_data <- do.call("rbind", list_plot_data)
plot_data <- pivot_longer(plot_data, cols = c("depth_remaining", "to_pay", "to_pay_after_tax"))
plot_data2 <- dplyr::filter(plot_data, name == "to_pay")
Tr <- ggplot(plot_data2, aes(x = lan, y = value, fill = lan))
Tr <- Tr +
geom_col() +
facet_wrap(year ~.) +
scale_fill_manual("", values = lan_colors) +
theme_cowplot(12) +
background_grid(size.major = 0.2) +
xlab("") +
ylab("amount [DKK]") +
theme(legend.position = "top",
axis.text.x = element_text(angle = 90, vjust = .5, hjust = 1))
Tr
library(knitr)
library(lubridate)
library(viridis)
library(cowplot)
library(tidyverse)
inflation <- 1.2
dir_tables <- "~/Desktop/bank_tilbud_comparisons/year_tables"
house_price <- 4571000
omkostning_garanti <- 1500
indskud <- -1020000
first_rate <- -75000
extra_thorsten <- -75000
extra_faelles <- -117561
extra_iben <- -7439
# - we also already paid -
lawyer_cost <- 6524
tinglysning_skoede <- 29250
# --
basis_amount <- house_price + omkostning_garanti + indskud + first_rate + extra_thorsten + extra_faelles + extra_iben
make_df_key_numbers_lan <- function(provenue, kurstab, etableringsomkostninger, total_bidrag, total_interest, years, average_to_pay_year, max_to_pay_year, name_lan = NA){
df <- data_frame(item = c("provenue",
"kurstab",
"etableringsomkostninger",
"total_bidrag",
"total_interest",
"years",
"average_to_pay_year",
"max_to_pay_year"),
value = c(provenue,
kurstab,
etableringsomkostninger,
total_bidrag,
total_interest,
years,
average_to_pay_year,
max_to_pay_year))
df$name_lan <- name_lan
df$ type <- c(rep("total", 5), "other", "average_per_year", "max_per_year")
df
}
to_tt_year <- function(tt){
tt_year_list <- split(tt, f = as.factor(tt$year))
entries <- sapply(tt_year_list, nrow)
tt_year_list[which(entries > 1)] <- lapply(tt_year_list[which(entries > 1)], function(c_df){
c_df_new <- data.frame(year = c_df$year[1], t(colSums(c_df[,2:6])), depth_remaining = c_df$depth_remaining[nrow(c_df)])
c_df_new
})
tt_year <- do.call("rbind", tt_year_list)
tt_year
}
list_lan <- list()
list_tt <- list()
name_lan <- "p5"
cost_for_getting_lan <- 32571 + 11730
lan_needed_DKK  <- 1828888 + 1768000 # provenue based on Frederik
basis_amount_p5 <- lan_needed_DKK - cost_for_getting_lan
#basis_amount_Frederik_05p3m - basis_amount_Frederik # I say that's basically the same
kurs <- 0.96108
hovedstol_DKK <- 1899000 + 1768000 # the actual start gaeld i banken
1828888/kurs - 1899000
kurstab <- hovedstol_DKK - lan_needed_DKK
lan_period_years <- 30
total_price_DKK <- 2338213 + 2026944
table_name <- "hb_obligationsdel_5050_20y.txt"
tt <- read.delim2(file.path(dir_tables, table_name), header = FALSE, sep = " ")
colnames(tt) <- c("year", "to_pay_before_tax", "to_pay_after_tax", "interest", "bidrag", "afdrag", "depth_remaining")
# - remove all dots in correct way -
tt[2:7] <- lapply(tt[2:7], str_remove_all, "\\.")
tt[2:7] <- lapply(tt[2:7], as.numeric)
tt$year <- str_extract(tt$year, "[0-9]{4}$")
tt_year <- to_tt_year(tt)
# --
# - here you need the table for the second lan -
table_name <- "hb_p5_5050.txt"
tt2 <- read.delim2(file.path(dir_tables, table_name), header = FALSE, sep = " ")
colnames(tt2) <- c("year", "to_pay_before_tax", "to_pay_after_tax", "interest", "bidrag", "afdrag", "depth_remaining")
# - remove all dots in correct way -
tt2[2:7] <- lapply(tt2[2:7], str_remove_all, "\\.")
tt2[2:7] <- lapply(tt2[2:7], as.numeric)
tt2$year <- str_extract(tt2$year, "[0-9]{4}$")
tt2_year <- to_tt_year(tt2)
# --
# - combine the two tables into one -
tt <- rbind(tt_year, tt2_year)
tt <-  dplyr::arrange(tt, year)
tt_year_list <- split(tt, f = as.factor(tt$year))
entries <- sapply(tt_year_list, nrow)
tt_year_list[which(entries > 1)] <- lapply(tt_year_list[which(entries > 1)], function(c_df){
c_df_new <- data.frame(year = c_df$year[1], t(colSums(c_df[,2:7])))
c_df_new
})
tt <- do.call("rbind", tt_year_list)
# --
sum(tt$to_pay_before_tax) - total_price_DKK # basically correct
sum(tt$interest) - (302883 + 258944)
sum(tt$bidrag)
sum(tt$afdrag) - hovedstol_DKK # also basically the same
# --
# - get max and average to pay per year -
max_per_year <- max(tt$to_pay_before_tax)
average_per_year <- mean(tt$to_pay_before_tax)
# --
# - quick check if number in plot fits to total_price_DKK -
basis_amount_p5 + kurstab + cost_for_getting_lan + sum(tt$bidrag) + sum(tt$interest) - total_price_DKK # yeps
# --
tt_p5 <- tt
# - HB_obligation_1PC -
df <- make_df_key_numbers_lan(provenue = basis_amount_p5,
kurstab = kurstab, etableringsomkostninger = cost_for_getting_lan,
total_bidrag = sum(tt$bidrag), total_interest = sum(tt$interest),
years = 30, average_to_pay_year = average_per_year, max_to_pay_year = max_per_year, name_lan = name_lan)
# --
list_lan[[name_lan]] <- df
list_tt[[name_lan]] <- tt
name_lan <- "obli_1k0_20y"
cost_for_getting_lan <- 38938
lan_needed_DKK  <- 3645521 # provenue based on Frederik
basis_amount_obli_20 <- lan_needed_DKK - cost_for_getting_lan
kurs <- 0.99133
hovedstol_DKK <- 3670000 # the actual start gaeld i banken
lan_needed_DKK/kurs - hovedstol_DKK # NOT SURE WHY THIS IS NOT THE SAME
kurstab <- hovedstol_DKK - lan_needed_DKK
lan_period_years <- 20
total_price_DKK <- 4342811
table_name <- "hb_obli_1k0_20.txt"
tt <- read.delim2(file.path(dir_tables, table_name), header = FALSE, sep = " ")
colnames(tt) <- c("year", "to_pay_before_tax", "to_pay_after_tax", "interest", "bidrag", "afdrag", "depth_remaining")
# - remove all dots in correct way -
tt[2:7] <- lapply(tt[2:7], str_remove_all, "\\.")
tt[2:7] <- lapply(tt[2:7], as.numeric)
tt$year <- str_extract(tt$year, "[0-9]{4}$")
tt_year <- to_tt_year(tt)
tt <- tt_year
# --
sum(tt$to_pay_before_tax) - total_price_DKK # basically correct
sum(tt$interest) - 387549 # also basically as stated
sum(tt$bidrag)
sum(tt$afdrag) - hovedstol_DKK # also basically the same
# --
# - get max and average to pay per year -
max_per_year <- max(tt$to_pay_before_tax)
average_per_year <- mean(tt$to_pay_before_tax)
# --
# - quick check if number in plot fits to total_price_DKK -
basis_amount_obli_20 + kurstab + cost_for_getting_lan + sum(tt$bidrag) + sum(tt$interest) - total_price_DKK # yeps
# --
tt_obli_20 <- tt
# - HB_obligation_1PC -
df <- make_df_key_numbers_lan(provenue = basis_amount_obli_20,
kurstab = kurstab, etableringsomkostninger = cost_for_getting_lan,
total_bidrag = sum(tt$bidrag), total_interest = sum(tt$interest),
years = 20, average_to_pay_year = average_per_year, max_to_pay_year = max_per_year, name_lan = name_lan)
# --
list_lan[[name_lan]] <- df
list_tt[[name_lan]] <- tt
name_lan <- "obli_1k0_30y"
cost_for_getting_lan <- 36919
lan_needed_DKK  <- 3439512 # provenue based on Frederik
basis_amount_obli_30 <- lan_needed_DKK - cost_for_getting_lan
# Hovedstol= provenu/(1-(1-(kurs/100)-0,05)) ??
kurs <- 0.9628
hovedstol_DKK <- 3565000 # the actual start gaeld i banken
lan_needed_DKK/kurs - hovedstol_DKK # NOT SURE WHY THIS IS NOT THE SAME seems always to be 7000 cheaper
lan_needed_DKK/(kurs+0.002) - hovedstol_DKK # NOW I know: the real kurs would have been 0.2% higher!
kurstab <- hovedstol_DKK - lan_needed_DKK
lan_period_years <- 30
total_price_DKK <- 4537628
table_name <- "hb_obli_1k0_30.txt"
tt <- read.delim2(file.path(dir_tables, table_name), header = FALSE, sep = " ")
colnames(tt) <- c("year", "to_pay_before_tax", "to_pay_after_tax", "interest", "bidrag", "afdrag", "depth_remaining")
# - remove all dots in correct way -
tt[2:7] <- lapply(tt[2:7], str_remove_all, "\\.")
tt[2:7] <- lapply(tt[2:7], as.numeric)
tt$year <- str_extract(tt$year, "[0-9]{4}$")
tt_year <- to_tt_year(tt)
tt <- tt_year
# --
sum(tt$to_pay_before_tax) - total_price_DKK # basically correct
sum(tt$interest) - 569360 # also basically as stated
sum(tt$bidrag)
sum(tt$afdrag) - hovedstol_DKK # also basically the same
# - get max and average to pay per year -
max_per_year <- max(tt$to_pay_before_tax)
average_per_year <- mean(tt$to_pay_before_tax)
# --
# - quick check if number in plot fits to total_price_DKK -
basis_amount_obli_30 + kurstab + cost_for_getting_lan + sum(tt$bidrag) + sum(tt$interest) - total_price_DKK # yeps
# --
tt_obli_30_1pc <- tt
# - HB_obligation_1PC -
df <- make_df_key_numbers_lan(provenue = basis_amount_obli_30,
kurstab = kurstab, etableringsomkostninger = cost_for_getting_lan,
total_bidrag = sum(tt$bidrag), total_interest = sum(tt$interest),
years = 30, average_to_pay_year = average_per_year, max_to_pay_year = max_per_year, name_lan = name_lan)
# --
list_lan[[name_lan]] <- df
list_tt[[name_lan]] <- tt
df <- do.call("rbind", list_lan)
plot_data <- dplyr::filter(df, type != "other")
plot_data$item <- factor(plot_data$item, levels = rev(c("provenue", "kurstab", "etableringsomkostninger", "total_bidrag", "total_interest", "average_to_pay_year", "max_to_pay_year", "years")))
plot_data$type <-  factor(plot_data$type, levels = c("total", "average_per_year", "max_per_year", "other"))
colors_item <- c(`provenue` = "#31a354",
`kurstab` = "#cbc9e2",
`etableringsomkostninger` = "#9e9ac8",
`total_bidrag` = "#756bb1",
`total_interest` = "#54278f",
`average_to_pay_year` = "#fdae6b",
`max_to_pay_year` = "#e6550d",
`years` = "#cccccc")
Tr <- ggplot(plot_data, aes(x = name_lan, y = value))
Tr <- Tr +
geom_col(aes(fill = item)) +
scale_fill_manual("", values = colors_item) +
facet_wrap(~ type, scales = "free_y") +
theme_cowplot(10) +
xlab("") +
ylab("amounts in DKK and years") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
gebyr_table <- group_by(df, name_lan) %>% summarise(provenue = value[item == "provenue"],
gebyrer = sum(value[item %in% c("kurstab", "etableringsomkostninger", "total_bidrag", "total_interest")]),
PC_gebyrer = 100*gebyrer/value[item == "provenue"])
knitr::kable(gebyr_table)
Tr
list_tt_year <- list_tt
#list_tt_year[1:3] <- lapply(list_tt_year[1:3], to_tt_year)
# - for the old one you haave to do it by hand -
# c_tt <- list_tt_year[[4]]
# tt_year <- rbind(c_tt[1,], data.frame(year = 2021, t(colSums(c_tt[2:5,2:ncol(c_tt)]))), c_tt[6:nrow(tt),])
# tt_year$depth_remaining[2] <- c_tt$depth_remaining[5]
# tt_year$year <- list_tt_year[[1]]$year
# list_tt_year[[4]] <- tt_year
# --
list_tt_year[] <- lapply(list_tt_year[],function(c_tt){
c_tt$No_year = (1:nrow(c_tt))-1
c_tt
})
list_tt_year_NV <- list_tt_year
list_tt_year_NV[] <- lapply(list_tt_year_NV[],function(c_tt){
c_tt[2:7] <- c_tt[2:7]/((1+(inflation/100))^(c_tt$No_year))
c_tt
})
list_plot_data <- Map(f = function(c_tt, name_lan){
df <- dplyr::select(c_tt, year, depth_remaining, to_pay = to_pay_before_tax, to_pay_after_tax)
df$to_pay <- cumsum(df$to_pay)
df$to_pay_after_tax <- cumsum(df$to_pay_after_tax)
df$lan <- name_lan
df
}, c_tt = list_tt_year, name_lan = names(list_tt_year))
plot_data <- do.call("rbind", list_plot_data)
plot_data <- pivot_longer(plot_data, cols = c("depth_remaining", "to_pay", "to_pay_after_tax"))
# - maybe add hovedstol linie -
hovedstol_list <- lapply(list_lan, function(c_df){
data.frame(item = 'hovedstol', value = sum(c_df$value[1:3]))
})
hovedstol_df <- Map(f = function(c_df, lan_name){
c_df$lan <- lan_name
c_df
}, c_df <- hovedstol_list, lan_name <- names(hovedstol_list))
hovedstol_df <- do.call("rbind", hovedstol_df)
lan_colors <- c('obli_1k5_30y' = "#11544A",
'obli_1k0_20y' = "orange", #"#30A190",
'obli_1k0_30y' = "green",
'p3m_50' = "#937BB0",
'p3m_60' = "#EDC73B",
'obli_1k0_30y_old'= "red",
'p5' = 'gold')
Tr <- ggplot(plot_data, aes(x = year, y = value, col = lan))
Tr <- Tr +
geom_line(aes(group = lan), size = 0.4) +
geom_point(size = 1.1, alpha = 0.7) +
facet_grid(name ~., scales = "free_y") +
geom_hline(data = hovedstol_df, aes(yintercept = value, col = lan), lty = 4, size = 0.2, alpha = 0.7) +
scale_color_manual("", values = lan_colors) +
theme_cowplot(14) +
background_grid(size.major = 0.2) +
xlab("") +
ylab("amount [DKK]") +
theme(legend.position = "top",
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
Tr
list_plot_data <- Map(f = function(c_tt, name_lan){
df <- dplyr::select(c_tt, year, depth_remaining, to_pay = to_pay_before_tax, to_pay_after_tax)
df$lan <- name_lan
df
}, c_tt = list_tt_year, name_lan = names(list_tt_year))
plot_data <- do.call("rbind", list_plot_data)
plot_data <- pivot_longer(plot_data, cols = c("depth_remaining", "to_pay", "to_pay_after_tax"))
plot_data2 <- dplyr::filter(plot_data, name == "to_pay")
Tr <- ggplot(plot_data2, aes(x = lan, y = value, fill = lan))
Tr <- Tr +
geom_col() +
facet_wrap(year ~.) +
scale_fill_manual("", values = lan_colors) +
theme_cowplot(12) +
background_grid(size.major = 0.2) +
xlab("") +
ylab("amount [DKK]") +
theme(legend.position = "top",
axis.text.x = element_text(angle = 90, vjust = .5, hjust = 1))
list_plot_data <- Map(f = function(c_tt, name_lan){
df <- dplyr::select(c_tt, year, depth_remaining, to_pay = to_pay_before_tax, to_pay_after_tax)
df$to_pay <- cumsum(df$to_pay)
df$to_pay_after_tax <- cumsum(df$to_pay_after_tax)
df$lan <- name_lan
df
}, c_tt = list_tt_year_NV, name_lan = names(list_tt_year))
plot_data <- do.call("rbind", list_plot_data)
plot_data <- pivot_longer(plot_data, cols = c("depth_remaining", "to_pay", "to_pay_after_tax"))
# lan_colors <- c('obli_1k5_30y' = "#11544A",
#                 'obli_1k0_20y' = "#30A190",
#                 'p3m_50' = "#937BB0",
#                 'p3m_60' = "#EDC73B")
Tr <- ggplot(plot_data, aes(x = year, y = value, col = lan))
Tr <- Tr +
geom_line(aes(group = lan), size = 0.4) +
geom_point(size = 1.1, alpha = 0.7) +
facet_grid(name ~., scales = "free_y") +
geom_hline(data = hovedstol_df, aes(yintercept = value, col = lan), lty = 4, size = 0.2, alpha = 0.7) +
scale_color_manual("", values = lan_colors) +
theme_cowplot(14) +
background_grid(size.major = 0.2) +
xlab("") +
ylab("amount [DKK]") +
theme(legend.position = "top",
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
Tr
list_to_pay <- Map(f = function(c_tt, name_lan){
df <- dplyr::select(c_tt, to_pay_before_tax, to_pay_after_tax)
df <- data.frame(t(colSums(df)))
df$lan <- name_lan
df$type <- "total"
df
}, c_tt = list_tt_year, name_lan = names(list_tt_year))
list_to_pay_NV <- Map(f = function(c_tt, name_lan){
df <- dplyr::select(c_tt, to_pay_before_tax, to_pay_after_tax)
df <- data.frame(t(colSums(df)))
df$lan <- name_lan
df$type <- "nuvaerdi"
df
}, c_tt = list_tt_year_NV, name_lan = names(list_tt_year))
data_to_pay <- rbind(do.call("rbind", list_to_pay), do.call("rbind", list_to_pay_NV))
plot_data <- pivot_longer(data_to_pay, cols = 1:2, names_to = "tax_type")
plot_data$type <- factor(plot_data$type, levels = c("total", "nuvaerdi"))
plot_data$tax_type <- factor(plot_data$tax_type, levels = c("to_pay_before_tax", "to_pay_after_tax"))
# - add the provenue as horisontal line -
# provenues <- sapply(list_tt_year, function(df){df$afdrag[1] + df$depth_remaining[1]})
# mean_provenue <- mean(provenues)
# - new: add provenue, as this varies -
df <- do.call("rbind", list_lan)
df <- dplyr::filter(df, item == "provenue")
plot_data$provenue <- df$value[match(plot_data$lan, df$name_lan)]
# --
# NEW also add hovedstol
plot_data$hovedstol <- hovedstol_df$value[match(plot_data$lan, hovedstol_df$lan)]
# provenues - mean_provenue
# --
Tr <- ggplot(plot_data, aes(x = lan, y = value, fill = lan))
Tr <- Tr +
geom_col() +
#geom_hline(yintercept = mean_provenue, lty = 4, col = "darkred", size = 0.25) +
geom_point(aes(y = provenue), col = "darkred", size = 2) +
geom_point(aes(y = hovedstol), col = "lightblue", size = 2) +
facet_grid(type ~ tax_type) +
scale_fill_manual("", values = lan_colors) +
theme_cowplot(14) +
background_grid(size.major = 0.2) +
xlab("") +
ylab("amount [DKK]") +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
# - also as table please -
sum_table <- pivot_wider(plot_data, names_from = type) %>% select(tax_type, lan, total, nuvaerdi, provenue) %>% arrange(tax_type, nuvaerdi, total)
sum_table <- mutate(sum_table, total_to_provenue = total - provenue,
nuvaerdi_to_provenue = nuvaerdi - provenue,
gebyr_PC_total = round(100*total_to_provenue/provenue, 1),
gebyr_PC_nuvaerdi = round(100*nuvaerdi_to_provenue/provenue, 1))
# --
Tr
knitr::kable(sum_table)
812573/3552587
cm.colors
cm.colors()
cm.colors[1]
cm.colors[5]
cm.colors(5)
library(cm.analysis)
cm.colors
cm.show_colors(cm_colors(5))
cm.show_colors(cm.colors(5))
cm.colors
cm_colors
181/12
brug_for <- 1828888
brug_for
kurs <- 96.108
hovedstol <- 1828888
brug_for/hovedstol
hovedstol <- 1899000
brug_for/hovedstol
library(shiny); runApp('~/shiny_apps/ibenerary/app_ibenerary.R')
